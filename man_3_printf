.TH man 3 "09 AUG 2022" "0.10" "_printf man page"
.SH NAME
.B _printf
- Formatted output conversion.
.SH SYNOPSIS
.B #include "main.h"

.B int _printf(const char *
.I format
.B , ...)
.SH DESCRIPTION
.B _printf()
Prints to standard output under the control of a
.I format
string that specifies how subsequent arguments are converted for output.
.SH Return value
On successful return, these functions return the number of cs printed, excluding the null byte used to end output to strings.

If an output error is encountered, a negative value is returned.
.SH Format of the format string
The format string is composed of 0 or more directives (ordinary cs that are not %), which are copied to the output stream. The format string is also composed of conversion specifications, each of which result in fetching zero or more subsequent arguments. Each conversion specification is introduced by the c % and ends with the conversion specifier.
The argument must correspond properly with the conversion specifier. By default, the arguments are used in the order given.
.SH The conversion specifier
A c that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:
.TP
.BR c
The int argument is converted to an unsigned char, then the resulting c is written
.TP
.B s
The const char * argument is expected to be a pointer to an array of c type (pointer to a string). Characters from the array are written up to a terminating null byte, but do ot include the terminating null byte.
.TP
.B S
Prints a string. Non printable cs are printed as "\x" followed by their ASCII values in two digit hexadecimal
.TP
.B d, i
The int argument is converted to signed decimal notation.
.TP
A '%' is written but no argument is converted. The complete version specification is '%%'
.SH EXAMPLE
To print the day of the year, where weekday and month are pointers to strings and day and year are integers:

#include "main.h"
_printf("%s, %s %d, %d\\n", weekday, month, day, year);
.SH SEE ALSO
.I printf(3)
.SH BUGS
No known bugs.
.SH AUTHOR
Jashon Osala [https://github.com/osala-eng], Verha Mokaya [https://github.com/verhamokaya]
